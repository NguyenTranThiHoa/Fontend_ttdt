import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { Documents } from '../../../Admin/admin/documents/documents.model';

import { environment } from '../../../../environment';

@Injectable({
  providedIn: 'root'
})
export class CategogyDocService {

  // private apiUrl = 'https://localhost:7253/api/Documents';
  // private apiUrl2 = 'https://localhost:7253/api/Category_documents';

  private apiUrl = `${environment.apiBaseUrl}/Documents`;
  private apiUrl2 = `${environment.apiBaseUrl}/Category_documents`;

  constructor(private http: HttpClient) {}

  // ðŸ”¥ **ThÃªm Authorization vÃ o Header**
  private getAuthHeaders(): HttpHeaders {
    const token = localStorage.getItem('token');
    if (!token) {
      console.error("ðŸš¨ KhÃ´ng cÃ³ token, API sáº½ bá»‹ lá»—i 401!");
      return new HttpHeaders();
    }
    return new HttpHeaders({ Authorization: `Bearer ${token}` });
  }

  /** ðŸ“Œ **Táº£i file tÃ i liá»‡u** */
  getDocumentFile(id: number): Observable<Blob> {
    return this.http.get(`${this.apiUrl}/GetDocumentFile/${id}`, {
      responseType: 'blob',
      headers: this.getAuthHeaders()
    });
  }

  /** ðŸ“Œ **Láº¥y danh sÃ¡ch tÃ i liá»‡u theo danh má»¥c** */
  getDocByCategory(name: string): Observable<any> {
    return this.http.get(`${this.apiUrl}/GetDocByNameCategory/${name}`, { headers: this.getAuthHeaders() });
  }

  /** ðŸ“Œ **Láº¥y tÃªn danh má»¥c tá»« ID** */
  getCategoryNameById(categoryId: number): Observable<any> {
    return this.http.get<any>(`${this.apiUrl2}/GetCategory_documentsById/${categoryId}`, { headers: this.getAuthHeaders() });
  }

  /** ðŸ“Œ **Láº¥y danh má»¥c con theo tÃªn danh má»¥c cha** */
  getSubcategoriesByName(name: string): Observable<any> {
    return this.http.get(`${this.apiUrl2}/GetAllSubCat_DocumentNamesByName/${name}`, { headers: this.getAuthHeaders() });
  }

  /** ðŸ“Œ **Láº¥y 5 vÄƒn báº£n má»›i nháº¥t theo danh má»¥c** */
  GetTop5DocByCategory(id: number): Observable<Documents[]> {
    return this.http.get<Documents[]>(`${this.apiUrl}/GetTop5LatestDocByCategory/${id}`, { headers: this.getAuthHeaders() });
  }

  ///////// **DÃ¹ng trong trang chi tiáº¿t vÄƒn báº£n** /////////

  /** ðŸ“Œ **Láº¥y tÃ i liá»‡u theo tÃªn** */
  GetDocByName(name: string): Observable<Documents> {
    return this.http.get<Documents>(`${this.apiUrl}/GetDocByName/${name}`, { headers: this.getAuthHeaders() });
  }

  /** ðŸ“Œ **Láº¥y tÃ i liá»‡u liÃªn quan** */
  GetRelatedDoc(id: number): Observable<Documents[]> {
    return this.http.get<Documents[]>(`${this.apiUrl}/GetRelatedDoc/${id}`, { headers: this.getAuthHeaders() });
  }
}
