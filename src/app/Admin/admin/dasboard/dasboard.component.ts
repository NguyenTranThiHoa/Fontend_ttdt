import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';  
import { RouterModule } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { NgxPaginationModule } from 'ngx-pagination';  
import { ChangeDetectorRef } from '@angular/core';
import { HttpClient } from '@angular/common/http'; 
import { News_Events } from '../news_events/news_events.model';
import { DashboardService } from './dashboard.service';
import Chart from 'chart.js/auto';
import { ActivatedRoute } from '@angular/router'; // ‚úÖ Import th√™m ActivatedRoute

@Component({
  selector: 'app-dasboard',
  standalone: true,
  imports: [CommonModule, RouterModule, FormsModule , NgxPaginationModule],
  templateUrl: './dasboard.component.html',
  styleUrls: ['./dasboard.component.css'] // S·ª≠a th√†nh styleUrls
})
export class DasboardComponent {
  new_events: News_Events[] = []; 
  
  
  constructor(
      private dashboardService: DashboardService,
      private cdr: ChangeDetectorRef,
      private httpClient: HttpClient,
      private route: ActivatedRoute // ‚úÖ Thay v√¨ Router, d√πng ActivatedRoute
  ) { }

  ngOnInit(): void {
    this.loadStatistics(); 
    this.loadTopViewedNews(3); // ‚úÖ Hi·ªÉn th·ªã 5 b√†i vi·∫øt xem nhi·ªÅu nh·∫•t
    this.loadNewsViewsByCategory(); // ‚úÖ G·ªçi h√†m v·∫Ω bi·ªÉu ƒë·ªì
    this.loadNewsViewsOverTime();
  }

  reloadPage(): void {
    window.location.reload();
  }
  
  statistics = {
    totalNewEvents: 0,
    totalDocuments: 0,
    totalProcedure: 0,
    totalIntroduces: 0
  };

  loadStatistics(): void {
    this.dashboardService.GetStatistics().subscribe((data: any) => {
      this.statistics = data;
      this.renderChart();
    });
  }

  renderChart(): void {
    const ctx = document.getElementById('statisticsChart') as HTMLCanvasElement;

    if (ctx) {
      new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: ['Tin t·ª©c', 'VƒÉn b·∫£n', 'Th·ªß t·ª•c', 'Gi·ªõi thi·ªáu'],
          datasets: [{
            data: [
              this.statistics.totalNewEvents,
              this.statistics.totalDocuments,
              this.statistics.totalProcedure,
              this.statistics.totalIntroduces
            ],
            backgroundColor: ['#36A2EB', '#FFCE56', '#4BC0C0', '#FF6384'],
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });
    }
  }

  formatName(name: string | null | undefined): string {
    if (!name) return "unknown-document";

    return name
      .trim()
      .toLowerCase()
      .normalize("NFD") // Chuy·ªÉn k√Ω t·ª± c√≥ d·∫•u th√†nh d·∫°ng g·ªëc (e.g., "ƒë" ‚Üí "dÃõ")
      .replace(/[\u0300-\u036f]/g, "") // Lo·∫°i b·ªè d·∫•u ti·∫øng Vi·ªát
      .replace(/ƒë/g, "d").replace(/ƒê/g, "D") // Chuy·ªÉn "ƒë", "ƒê" th√†nh "d", "D"
      .replace(/[\/,().]/g, "-") // Thay "/", ",", ".", "(", ")" th√†nh "-"
      .replace(/[^a-z0-9-]/g, "-") // Ch·ªâ gi·ªØ ch·ªØ c√°i, s·ªë, v√† d·∫•u "-"
      .replace(/-+/g, "-") // Lo·∫°i b·ªè d·∫•u "-" l·∫∑p l·∫°i
      .replace(/^-+|-+$/g, ""); // X√≥a d·∫•u "-" ·ªü ƒë·∫ßu ho·∫∑c cu·ªëi chu·ªói
  }

  newEvents: News_Events[] = [];

  loadTopViewedNews(count: number): void {
    this.dashboardService.getTopViewedNews(count).subscribe((data) => {
      this.newEvents = data;
    }, error => {
      console.error("L·ªói khi t·∫£i danh s√°ch b√†i vi·∫øt xem nhi·ªÅu:", error);
    });
  }

  // Tr·∫£ v·ªÅ l∆∞·ª£t xem theo danh m·ª•c
  categoryChart: any; // L∆∞u tr·ªØ bi·ªÉu ƒë·ªì ƒë·ªÉ tr√°nh l·ªói ch·ªìng bi·ªÉu ƒë·ªì

  loadNewsViewsByCategory(): void {
    this.dashboardService.GetNewsViewsByCategory().subscribe((data) => {
      console.log("üìä D·ªØ li·ªáu API tr·∫£ v·ªÅ:", data); // ‚úÖ Ki·ªÉm tra d·ªØ li·ªáu API

      if (!data || data.length === 0) {
        console.warn("üö® Kh√¥ng c√≥ d·ªØ li·ªáu l∆∞·ª£t xem danh m·ª•c.");
        return;
      }

      const categories = data.map(item => item.category.trim()); // ‚úÖ ƒê·∫£m b·∫£o kh√¥ng c√≥ d·∫•u c√°ch th·ª´a
      const views = data.map(item => item.totalViews);

      // üî• X√≥a bi·ªÉu ƒë·ªì c≈© tr∆∞·ªõc khi v·∫Ω l·∫°i (tr√°nh l·ªói ch·ªìng bi·ªÉu ƒë·ªì)
      if (this.categoryChart) {
        this.categoryChart.destroy();
      }

      const ctx = document.getElementById('categoryChart') as HTMLCanvasElement;
      if (ctx) {
        this.categoryChart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: categories,
            datasets: [{
              label: 'L∆∞·ª£t xem theo danh m·ª•c',
              data: views,
              backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],
              borderWidth: 1
            }]
          },
          options: {
            responsive: true,
            scales: {
              y: { beginAtZero: true }
            }
          }
        });
      } else {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ c√≥ id='categoryChart'");
      }
    }, error => {
      console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu l∆∞·ª£t xem danh m·ª•c:", error);
    });
  }

  // S·ªë l∆∞·ª£t xem b√†i vi·∫øt theo ng√†y
  viewsOverTimeChart: any; // L∆∞u bi·ªÉu ƒë·ªì ƒë·ªÉ tr√°nh l·ªói v·∫Ω ch·ªìng

  loadNewsViewsOverTime(): void {
    this.dashboardService.GetNewsViewsOverTime().subscribe((data) => {
      console.log("üìä D·ªØ li·ªáu API tr·∫£ v·ªÅ:", data); // ‚úÖ Ki·ªÉm tra d·ªØ li·ªáu API

      if (!data || data.length === 0) {
        console.warn("üö® Kh√¥ng c√≥ d·ªØ li·ªáu l∆∞·ª£t xem theo ng√†y.");
        return;
      }

      const dates = data.map(item => item.date);
      const views = data.map(item => item.totalViews);

      // üî• X√≥a bi·ªÉu ƒë·ªì c≈© tr∆∞·ªõc khi v·∫Ω l·∫°i (tr√°nh l·ªói ch·ªìng bi·ªÉu ƒë·ªì)
      if (this.viewsOverTimeChart) {
        this.viewsOverTimeChart.destroy();
      }

      const ctx = document.getElementById('viewsOverTimeChart') as HTMLCanvasElement;
      if (ctx) {
        this.viewsOverTimeChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: dates,
            datasets: [{
              label: 'L∆∞·ª£t xem theo th·ªùi gian',
              data: views,
              borderColor: '#FF6384',
              backgroundColor: 'rgba(255, 99, 132, 0.2)', // M√†u n·ªÅn nh·∫π
              fill: true,
              tension: 0.3
            }]
          },
          options: {
            responsive: true,
            scales: {
              x: { title: { display: true, text: "Ng√†y" } },
              y: { title: { display: true, text: "L∆∞·ª£t xem" }, beginAtZero: true }
            }
          }
        });
      } else {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ c√≥ id='viewsOverTimeChart'");
      }
    }, error => {
      console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu l∆∞·ª£t xem theo ng√†y:", error);
    });
  }

  // Domain cho c·∫£ 2
  onImageError(event: any) {
    const brokenUrl = event.target.src;
    const fileName = brokenUrl.split('/api/images/')[1];

    if (brokenUrl.includes('ttdt2503')) {
      event.target.src = 'https://api.ttdt03.id.vn/api/images/' + fileName;
    } else {
      event.target.src = 'assets/images/no-image.png';
    }
  }

}
